# Minimal test Dockerfile
FROM golang:1.21-alpine

# Install git and ca-certificates for dependencies
RUN apk add --no-cache git ca-certificates

# Configure Git to avoid authentication issues
RUN git config --global url."https://github.com/".insteadOf "git@github.com:" && \
    git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/" && \
    git config --global --add url."https://github.com/".insteadOf "git://github.com/" && \
    git config --global advice.detachedHead false

WORKDIR /app

# Copy the pre-configured go.mod with replace directive
COPY go.mod.docker ./go.mod
COPY go.sum ./

# Set environment
ENV GO111MODULE=on
ENV CGO_ENABLED=0

# Download dependencies with replace directive
RUN go mod download

# Copy the rest of the source code
COPY . .

# Use replace directive and debug
RUN go mod tidy && \
    echo "=== Directory structure ===" && \
    ls -la && \
    echo "=== pkg directory ===" && \
    ls -la pkg/ && \
    echo "=== pkg/golem directory ===" && \
    ls -la pkg/golem/ && \
    echo "=== go.mod content ===" && \
    cat go.mod && \
    echo "=== go list -m all ===" && \
    go list -m all

# Try to build
RUN go build -o telegram-bot examples/telegram_bot.go
